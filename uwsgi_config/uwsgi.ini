[uwsgi]
# 指定IP端口,ip为内网ip,如果是云服务器,是云服务器内网ip
# http可以直接访问,socket是让Nginx指定的
socket = 192.168.3.14:5000
# 项目目录,和manage.py同级的目录
chdir = /home/shanhai/Project/Django-XWhale
# 启动主进程，来管理其他进程
# 其它的uwsgi进程都是这个master进程的子进程
# 如果kill这个master进程，相当于重启所有的uwsgi进程
master = true
# 加载一个WSGI模块,这里加载wsgi.py这个模块
# 通常是在<django项目>/<和项目同名文件夹>/wsgi.py
# 但是如果chdir指定了项目绝对路径,只需要写<和项目同名文件夹>/wsgi.py
module = XWhale.wsgi
# 启动多少个进程,和核心数一样就行
processes = 1
# 每个进程最大的请求数
max_requests = 1000
# 运行的日志,通常放在 uwsgi_config 下
daemonize = /home/shanhai/Project/Django-XWhale/uwsgi_config/run.log
## 自动移除unix Socket和pid文件当服务停止的时候
vacuum = true
# 如果使用的是虚拟环境, 需要指定 pythonpath
# 如果是激活的是虚拟环境,使用命令:pip show django|grep -i location 即可得到
pythonpath = /home/shanhai/anaconda3/envs/django5/lib/python3.10/site-packages
# 指定pid文件,用于重启和停止,通常放在 uwsgi_config 下
pidfile = /home/shanhai/Project/Django-XWhale/uwsgi_config/uwsgi.pid
# 启用线程
enable-threads = true
#设置在平滑的重启（直到接收到的请求处理完才重启）一个工作子进程中，
# 等待这个工作结束的最长秒数。这个配置会使在平滑地重启工作子进程中，
# 如果工作进程结束时间超过了8秒就会被强行结束（忽略之前已经接收到的请求而直接结束）
reload-mercy = 8
buffer-size = 65536